---
layout: post
title:  "Weekly essay #22"
date:   2023-06-19 08:32:00 -0600
author: "Alondra Galvan"
categories: weekly-essay
---


This week was quite similar to the last one. I have been working on the BAH project (project that I detailed a bit more on my [last essay](https://alond-ra.github.io/github.io/weekly-essay/2023/06/12/Week-21.html)) with my teammates but also I kept reading about testing on Java and Python libraries. On the other hand, for the soft skills part, rather than reading, I talked with someone who is part of the Communication Enhancement Program and I also went to a couple of agile workshops.

For the BAH project, we kept adding tests. Our goal was to do unit tests (in this case we are taking certain methods as units; unit testing consists of checking that each unit works as expected, and we test them individually) for all the code that our team contributed to the project. For this, we consulted the JUnit documentation and watched a bunch of examples on YouTube. Additionally, I read the book “Mastering Software Testing with JUnit 5” by Boni Garcia. I haven’t finished it yet, though I started reading it a week ago. I started this book to get introduced to software testing with JUnit, and the first chapters do a good job. I'll mention, broadly, what they are about:

* Retrospective on software quality and Java testing: I got to understand what software quality is, its importance and some types and methods of unit testing.
* What's new in JUnit 5: an overview of JUnit's past versions and advantages and improvements that came with JUnit 5, some examples.
* JUnit 5 Standart Tests: This chapter has lots of examples to show the JUnit 5 model; emphasizing Jupiter: the module added in this 'new' version of JUnit. Its annotations are clear and useful. 
I want to keep reading it. This week I left it aside since there were other priorities. But I'll continue it.


I'm getting ready to have a mock interview on Python. I asked for advice from a friend who is a Python developer at Encora. He told me to read about Python libraries and about Docker. I read a little about Docker recently since it was relevant to one of the ways of deployment that we tried for the deployment of the BAH project, but I just got to understand it superficially. It even became a blocker for the deployment; in the end we abandoned that path sacrificing the CI/CD (continuous integration (CI) and continuous deliver (CD)) for the good of the project. To be honest, I just deepened on beatifulSoup. It is a Python library for scraping info from web pages. I used it a few months ago for a natural language homework for school, but I can’t remember what was about it exactly. 


Related to the mock interview, I read the [training for interviews](https://hub.nearsoft.com/t/training-for-interviewers/2237) from the Hub. But I also asked for advice from the Apprentice Staff and from Martin Cocoba who is part of the Communication Enhancement Program. I initially contacted him to see if there they could help me with my communication issues. And said program ended up fitting as a glove. This program was mentioned during the onboarding, but I forgot about it and I had the impression that that department was just for improving conversational English and not communication in general. He mentioned that he could help me with that and that he will make me another mock interview, for the non-technical part. I'm looking forward to it. He also gave me advice for approaching people.


There is a collaboration Apprentice - Global where there are a series of workshops. This week the workshops were about agile. I remember that I had an agile talk, but I barely remember what it was about exactly. However, I recently saw videos about agile for integrating the kanban and scrum methodologies to the BAH project. To be honest, we committed some mistakes during it, but I can say, proudly, that the team has learned from it and learned. The agile workshops were useful to identify clearer our mistakes and to remember the concepts. For the first workshop, they talked about the basic concepts: values, manifesto, roles and scrum ceremonies and artifacts. As I mentioned before, I am not new to agile, however, this workshop was too clear and informative. The second workshop was about user stories. I remember this process very clearly from the BAH project. I confirmed that the process was good, but we can improve (from that experience and from what we got in the workshop). This workshop had good examples and it was clear too. 
